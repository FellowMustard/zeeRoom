import { useMemo } from "react";

import { useGLTF, useTexture, useVideoTexture } from "@react-three/drei";
import * as THREE from "three";
import DialogMesh from "./DialogMesh";
import { useSelector } from "react-redux";
import { selectCurrentLocation } from "../../features/vector/vectorSlice";
import {
  BUG_POSITION,
  BUG_ROTATION,
  PROJECT_POSITION,
  PROJECT_ROTATION,
  SHELF_POSITION,
  SHELF_ROTATION,
  SM_POSITION,
  SM_ROTATION,
} from "../../lib/data";
import SocialMedia from "./SocialMedia";
import useLerp from "../../hooks/useLerp";

export function Room(props) {
  const { nodes } = useGLTF("models/pf.glb");
  const { lerpMove } = useLerp();
  const textures = useTexture([
    "models/bake_p01.webp",
    "models/bake_p02.webp",
    "models/bake_p03.webp",
    "models/bake_p_img.webp",
    "models/bake_p04.webp",
  ]);
  textures.forEach((texture) => {
    texture.flipY = false;
    texture.colorSpace = THREE.SRGBColorSpace;
    texture.generateMipmaps = false;
    texture.minFilter = THREE.LinearFilter;
    texture.magFilter = THREE.LinearFilter;
  });

  const materials = useMemo(
    () =>
      textures.map(
        (texture) =>
          new THREE.MeshBasicMaterial({ map: texture, transparent: false })
      ),
    [textures]
  );

  const videoTexture = useVideoTexture("/video/showcase.mp4", {
    crossOrigin: "anonymous",
    loop: true,
    muted: true,
    autoplay: true,
  });
  videoTexture.flipY = false;

  const currentLocation = useSelector(selectCurrentLocation);

  return (
    <group {...props} dispose={null}>
      {/* BUG REPORT */}
      <mesh
        onClick={() => {
          lerpMove("BUG", BUG_POSITION, BUG_ROTATION);
        }}
        castShadow
        receiveShadow
        geometry={nodes.bug.geometry}
        material={materials[1]}
        position={[1.888, 0.396, -2.11]}
      >
        <DialogMesh
          activator={currentLocation === "HOME"}
          message="Bug Report 👾"
          position={[0, 0.6, 0]}
        />
      </mesh>
      {/* PROJECT SHOWCASE */}
      <group
        onClick={() => {
          lerpMove("PROJECT", PROJECT_POSITION, PROJECT_ROTATION);
        }}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.laptop_screen.geometry}
          material={materials[1]}
          position={[-2.353, 1.705, -1.239]}
        >
          <meshBasicMaterial map={videoTexture} toneMapped={false} />
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.laptop.geometry}
          material={materials[1]}
          position={[-2.083, 1.558, -1.239]}
        >
          <DialogMesh
            activator={currentLocation === "HOME"}
            message="Project Showcase 🛠️"
            position={[0, 0.6, 0]}
          />
        </mesh>
      </group>

      {/* SOCIAL MEDIA */}
      <mesh
        onClick={() => {
          lerpMove("SOCIAL MEDIA", SM_POSITION, SM_ROTATION);
        }}
        castShadow
        receiveShadow
        geometry={nodes.s_table_main.geometry}
        material={materials[4]}
        position={[1.372, 0.662, 0.113]}
      >
        <DialogMesh
          activator={currentLocation === "HOME"}
          message="Social Media"
          position={[0, 0.6, 0]}
        />
      </mesh>

      {/* ABOUT MYSELF */}
      <mesh
         onClick={() => {
          if(currentLocation !== "SHELF"){
            lerpMove("SHELF", SHELF_POSITION[0], SHELF_ROTATION,0);
          }
        }}
        castShadow
        receiveShadow
        geometry={nodes.shelves.geometry}
        material={materials[2]}
        position={[-2.013, 2.832, 1.703]}
      >
        <DialogMesh
          activator={currentLocation === "HOME"}
          message={`About Mys(h)elf 🌟`}
          position={[0, 0.3, 0]}
        />
      </mesh>

      {/* GITHUB */}
      <SocialMedia type="GITHUB" activator={currentLocation === "SOCIAL MEDIA"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.gh.geometry}
          material={materials[4]}
        />
      </SocialMedia>
      {/* INSTAGRAM */}
      <SocialMedia
        type="INSTAGRAM"
        activator={currentLocation === "SOCIAL MEDIA"}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.ig.geometry}
          material={materials[4]}
        />
      </SocialMedia>
      {/* LINKED IN */}
      <SocialMedia
        type="LINKEDIN"
        activator={currentLocation === "SOCIAL MEDIA"}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.linked.geometry}
          material={materials[4]}
        />
      </SocialMedia>
      
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.AC.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.sofa_body.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.sofa_bottom.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.sofa_cushion_02.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.sofa_cushion_01.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.floor.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.room_bottom.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.room_right.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.room_left.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.trash.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.curtain_bar.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.curtain_left.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.ring_right.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.ring_left.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.holder_left.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.holder_right.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.window_border.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.curtain_right.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.guitar_body.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.guitar_neck.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.guitar_hold.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.string_06.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.guitar_h.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.string_hold.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.guitar_head.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.guitar_t.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.string_01.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.string_02.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.string_03.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.string_04.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.string_05.geometry}
        material={materials[0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.table_legs.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.table_stand.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.table_stand_side.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.table_body.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.table_holder.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mousepad.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cup.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.tk_book.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.deck02.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.deck01.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.scroll_wheel.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mouse_body.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mb_01.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mb_02.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.keyboard_case.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.keycaps.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube012.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.port_lap_key.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.port_lap_mouse.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.port_lap_hdd.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.port_hdd_lap.geometry}
        material={materials[1]}
      />

      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cable_lap_key.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.hdd.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cable_lap_hdd.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.chair_top.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.chair_bot.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.chair_side.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.chair_bot_plastic.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.chair_side_holder.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.chair_knee.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.chair_leg_holder.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.chair_skeleton.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.chair_back.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.chair_spine.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.chair_set.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.chair_pipe.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.chair_leg.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.chair_wheel.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.chair_wheel_stand.geometry}
        material={materials[1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.chess.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.rubick.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cardboard_container.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.plan_01.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.plan_08.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.plan_07.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.plan_03.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.plan_04.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.plan_05.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.folders.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.clip.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.sketch_holder.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.sketch_top.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.sketch_bot.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.sketch_book.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.paint_cup.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pencil_01.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pencil_02.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.palette_side.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.paint_palette.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.palette.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.indo_cover.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.indo_book.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cn_book.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cn_cover.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.en_book.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.en_cover.geometry}
        material={materials[2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.photo.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.react_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.react_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.js_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.js_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.tailwind_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.tailwind_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.next_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.next_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.shadcn_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.shadcn_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.three_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.three_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mongo_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mongo_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.node_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.node_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.prisma_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.prisma_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.redux_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.redux_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.html_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.html_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.type_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.type_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.express_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.express_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.unity_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.unity_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.motion_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.motion_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.blender_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.blender_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.css_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.css_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.git_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.git_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mysql_book.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mysql_cover.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.catan.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.sequence.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.root.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.saka.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.deck_bottom.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.deck_top.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.catr_uo.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.catr_botw.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.catr_04.geometry}
        material={materials[3]}
        position={[-1.837, 1.649, 1.194]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.catr_scarlet.geometry}
        material={materials[3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.catr_04002.geometry}
        material={materials[3]}
        position={[-2.211, 1.763, 1.071]}
        rotation={[1.518, -0.348, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.catr_04003.geometry}
        material={materials[3]}
        position={[-2.211, 1.763, 1.031]}
        rotation={[Math.PI / 2, -0.348, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.catr_04004.geometry}
        material={materials[3]}
        position={[-2.211, 1.763, 1.112]}
        rotation={[1.472, -0.348, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.phone.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.phone_screen.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.switch_body.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.switch_button_right.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.switch_r_joystick.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.switch_button_left.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.switch_l_joysitck.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.switch_dock.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.switch_lr_button.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pot.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.aloe.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.capybara.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.s_table_bot.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.s_table_desk.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.s_table_divider.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.tokyo_tower.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.flag_japan.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.flag_pole.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.japan_cover.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.japan_book.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.tray.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.awwwards.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.hammer.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.hammer_stick.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.render_sphere.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.react_02.geometry}
        material={materials[4]}
        position={[-1.882, 0.541, 1.867]}
        rotation={[0, -0.582, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.react_01.geometry}
        material={materials[4]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.react_08.geometry}
        material={materials[4]}
        position={[-2.084, 0.541, 1.923]}
        rotation={[0, -1.231, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.react_07.geometry}
        material={materials[4]}
        position={[-2.122, 0.541, 1.819]}
        rotation={[0, -0.082, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.react_06.geometry}
        material={materials[4]}
        position={[-2.045, 0.541, 1.754]}
        rotation={[0, 0.241, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.react_05.geometry}
        material={materials[4]}
        position={[-1.926, 0.541, 1.764]}
        rotation={[0, -1.372, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.react_04.geometry}
        material={materials[4]}
        position={[-1.964, 0.541, 1.665]}
        rotation={[Math.PI, -1.322, Math.PI]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.react_03.geometry}
        material={materials[4]}
        position={[-2.215, 0.541, 1.766]}
        rotation={[Math.PI, -1.322, Math.PI]}
      />
    </group>
  );
}

useGLTF.preload("models/pf.glb");
